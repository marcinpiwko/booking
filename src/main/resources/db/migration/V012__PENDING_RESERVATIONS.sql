CREATE TABLE PENDING_RESERVATIONS(
RES_ID INT NOT NULL,
RES_DATE TIMESTAMP NOT NULL,
FOREIGN KEY (RES_ID) REFERENCES RESERVATIONS (RES_ID)
);

CREATE OR REPLACE FUNCTION CREATE_PENDING_RESERVATION_FUNC() RETURNS TRIGGER LANGUAGE plpgsql AS $trigger$
BEGIN
INSERT INTO PENDING_RESERVATIONS VALUES (NEW.RES_ID, NEW.RES_DATE);
RETURN NEW;
END;
$trigger$;

CREATE OR REPLACE FUNCTION DELETE_PENDING_RESERVATION_FUNC() RETURNS TRIGGER LANGUAGE plpgsql AS $trigger$
BEGIN
DELETE FROM PENDING_RESERVATIONS WHERE RES_ID = NEW.RES_ID;
RETURN NEW;
END;
$trigger$;

CREATE TRIGGER IN_PENDING_RESERVATION_TRIGGER AFTER INSERT
ON RESERVATIONS FOR EACH ROW WHEN (NEW.RES_STATUS = 'P')
EXECUTE PROCEDURE CREATE_PENDING_RESERVATION_FUNC();

CREATE TRIGGER UP_PENDING_RESERVATION_TRIGGER AFTER UPDATE
ON RESERVATIONS FOR EACH ROW WHEN (OLD.RES_STATUS = 'P' AND NEW.RES_STATUS <> 'P')
EXECUTE PROCEDURE DELETE_PENDING_RESERVATION_FUNC();
